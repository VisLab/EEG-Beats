% dlg_eegbeats - GUI for entering eegbeats parameters 
%

% This program is free software; you can redistribute it and/or modify
% it under the terms of the GNU General Public License as published by
% the Free Software Foundation; either version 3 of the License, or
% (at your option) any later version.
%
% This program is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.


function [outStruct, okay] = dlg_eegbeats(params)
okay = true;
theTitle = 'eegbeats parameters';
closeOpenWindows(theTitle);
fileDirCb = ['dataDir = get(findobj(''parent'', gcbf, ''tag'', ''fileDir''), ''String'');' ...
             'fileDirName = uigetdir(dataDir, ''file directory''); drawnow;' ...
             'if fileDirName(1) ~= 0,' ...
             '   set(findobj(''parent'', gcbf, ''tag'', ''fileDir''), ''string'', fileDirName);' ...
             'end;' ...
             ];
figureDirCb = ['dumpDir = get(findobj(''parent'', gcbf, ''tag'', ''figureDir''), ''String'');' ...
             'dumpDirName = uigetdir(dumpDir, ''beats figure directory''); drawnow;' ...
             'if dumpDirName(1) ~= 0,' ...
             '   set(findobj(''parent'', gcbf, ''tag'', ''figureDir''), ''string'', dumpDirName);' ...
             'end;' ...
            ];
        
        
flipMenu = {'-1';'0';'1'};
flipValue = find(strcmpi(flipMenu,num2str(params.flipDirection.value)), 1, 'first');

spectrumTypeMenu = {'lomb'; 'ar';'fft'};
spectrumTypeValue =  find(strcmpi(spectrumTypeMenu, params.spectrumType.value), 1, 'first');

figureVisMenu = {'on'; 'off'};
figureVisValue =  find(strcmpi(figureVisMenu,params.figureVisibility.value), 1, 'first');



%% Set up the geometry for the GUI

geometry = {1,[1, 2,0.75],[1, 2,0.75],1,...
            [1.35,1,1.75,1],[1.35,1,1.75,1],[1.35,1,1.75,1],[1.35,1,1.75,1],[1.35,1,1.75,1],...
            [1.35,1,1.75,1],[1.35,1,1.75,1],[1.35,1,1.75,1],[1.35,1,1.75,1],[1.35,1,1.75,1],...
            [1.35,1,1.75,1],[1.35,1,1.75,1],[1.35,1,1.75,1],[1.35,1,1.75,1],[1.35,1,1.75,1],...
            [1.35,1,1.75,1],1,1,[1.35,1,1.75,1],[1.35,1,1.75,1]};
geomvert = [];
uilist = { ...
    { 'Style', 'text', 'string', 'Output options:', 'fontweight', 'bold'...
      'horizontalalignment', 'right'}, ...                                                  % title
    { 'Style', 'text', 'string', 'Output directory', ...
      'horizontalalignment', 'right', ...
      'TooltipString', params.fileDir.description}, ... 
    { 'Style', 'edit', 'string', params.fileDir.value, ...
      'horizontalalignment', 'left', 'tag',  'fileDir', ...
      'TooltipString', params.fileDir.description}, ...
    { 'Style', 'pushbutton', 'string', 'Browse...', 'callback', fileDirCb},...              % Row 2 fileDir
    { 'Style', 'text', 'string', 'Figure directory', ...
      'horizontalalignment', 'right', ...
      'TooltipString', params.figureDir.description}, ... 
    { 'Style', 'edit', 'string', params.figureDir.value, ...
      'horizontalalignment', 'left', 'tag',  'figureDir', ...
      'TooltipString', params.figureDir.description}, ...
    { 'Style', 'pushbutton', 'string', 'Browse...', 'callback', figureDirCb},...            % Row 3 figureDir
    { 'Style', 'text', 'string', '', 'horizontalalignment', 'right'}, ...                   % Empty line
    { 'Style', 'text', 'string', 'Finding heartbeats:', 'fontweight', 'bold'...
      'horizontalalignment', 'right'}, ...
    { 'Style', 'text', 'string', '', 'horizontalalignment', 'right'}, ...
    { 'Style', 'text', 'string', 'Calculating RR measures:','fontweight', 'bold' ...
      'horizontalalignment', 'right'}, ...
    { 'Style', 'text', 'string', '', 'horizontalalignment', 'right'}, ...                   % titles
    { 'Style', 'text', 'string', 'ekgChannelLabel', ...
      'horizontalalignment', 'right', ...
      'TooltipString', params.ekgChannelLabel.description}, ... 
    { 'Style', 'edit', 'string', params.ekgChannelLabel.value, ...
      'horizontalalignment', 'left', 'tag',  'ekgChannelLabel', ...
      'TooltipString', params.ekgChannelLabel.description}, ...
    { 'Style', 'text', 'string', 'Do RR measures', ... 
      'horizontalalignment', 'right', ...
      'TooltipString', params.doRRMeasures.description},...
    { 'Style', 'checkbox', 'Value', params.doRRMeasures.value, ...
      'horizontalalignment', 'left', 'tag',  'doRRMeasures', ...
      'TooltipString', params.doRRMeasures.description},...                                   % ekg type, check box for do RR measures
    { 'Style', 'text', 'string', 'filterHz', ...
      'horizontalalignment', 'right', ...
      'TooltipString',params.filterHz.description}, ...
    { 'Style', 'edit', 'string', vector2str(params.filterHz.value), ...
      'horizontalalignment', 'left',  'tag',  'filterHz', ...
      'TooltipString', params.filterHz.description}, ...
    { 'Style', 'text', 'string', 'rrsAroundOutlierAmpPeaks', ...
      'horizontalalignment', 'right', ...
      'TooltipString',params.rrsAroundOutlierAmpPeaks.description}, ...
    { 'Style', 'edit', 'string', params.rrsAroundOutlierAmpPeaks.value, ...
      'horizontalalignment', 'left',  'tag',  'rrsAroundOutlierAmpPeaks', ...
      'TooltipString', params.rrsAroundOutlierAmpPeaks.description}, ...                    % filterHz and rrsAroundOutlierAmpPeaks
    { 'Style', 'text', 'string', 'srate', ...
      'horizontalalignment', 'right', ...
      'TooltipString',params.srate.description}, ...
    { 'Style', 'edit', 'string', params.srate.value, ...
      'horizontalalignment', 'left',  'tag',  'srate', ...
      'TooltipString', params.srate.description}, ...
    { 'Style', 'text', 'string', 'rrOutlierNeighborhood', ...
      'horizontalalignment', 'right', ...
      'TooltipString',params.rrOutlierNeighborhood.description}, ...
    { 'Style', 'edit', 'string', params.rrOutlierNeighborhood.value, ...
      'horizontalalignment', 'left',  'tag',  'rrOutlierNeighborhood', ...
      'TooltipString', params.rrOutlierNeighborhood.description}, ...                       % srate and rrOutlierNeighborhood
    { 'Style', 'text', 'string', 'truncateThreshold', ...
      'horizontalalignment', 'right', ...
      'TooltipString',params.truncateThreshold.description}, ...
    { 'Style', 'edit', 'string', params.truncateThreshold.value, ...
      'horizontalalignment', 'left',  'tag',  'truncateThreshold', ...
      'TooltipString', params.truncateThreshold.description}, ...
    { 'Style', 'text', 'string', 'rrPercentToBeOutlier', ...
      'horizontalalignment', 'right', ...
      'TooltipString',params.rrPercentToBeOutlier.description}, ...
    { 'Style', 'edit', 'string', params.rrPercentToBeOutlier.value, ...
      'horizontalalignment', 'left',  'tag',  'rrPercentToBeOutlier', ...
      'TooltipString', params.rrPercentToBeOutlier.description}, ...                        % truncateThreshold and rrPercentToBeOutlier
    { 'Style', 'text', 'string', 'rrMaxMs', ...
      'horizontalalignment', 'right', ...
      'TooltipString',params.rrMaxMs.description}, ...
    { 'Style', 'edit', 'string', params.rrMaxMs.value, ...
      'horizontalalignment', 'left',  'tag',  'rrMaxMs', ...
      'TooltipString', params.rrMaxMs.description}, ...
    { 'Style', 'text', 'string', 'rrBlockMinutes', ...
      'horizontalalignment', 'right', ...
      'TooltipString',params.rrBlockMinutes.description}, ...
    { 'Style', 'edit', 'string', params.rrBlockMinutes.value, ...
      'horizontalalignment', 'left',  'tag',  'rrBlockMinutes', ...
      'TooltipString', params.rrBlockMinutes.description},...                               % rrMaxMs and rrBlockMinutes
    { 'Style', 'text', 'string', 'rrMinMs', ...
      'horizontalalignment', 'right', ...
      'TooltipString',params.rrMinMs.description}, ...
    { 'Style', 'edit', 'string', params.rrMinMs.value, ...
      'horizontalalignment', 'left',  'tag',  'rrMinMs', ...
      'TooltipString', params.rrMinMs.description}, ...
    { 'Style', 'text', 'string', 'rrBlockStepMinutes', ...
      'horizontalalignment', 'right', ...
      'TooltipString',params.rrBlockStepMinutes.description}, ...
    { 'Style', 'edit', 'string', params.rrBlockStepMinutes.value, ...
      'horizontalalignment', 'left',  'tag',  'rrBlockStepMinutes', ...
      'TooltipString', params.rrBlockStepMinutes.description},...                          % rrMinMs and rrBlockStepMinutes
    { 'Style', 'text', 'string', 'threshold', ... 
      'horizontalalignment', 'right', ...
      'TooltipString',params.threshold.description}, ...
    { 'Style', 'edit', 'string', params.threshold.value, ...
      'horizontalalignment', 'left',  'tag',  'threshold', ...
      'TooltipString', params.threshold.description}, ...
    { 'Style', 'text', 'string', 'detrendOrder', ...
      'horizontalalignment', 'right', ...
      'TooltipString',params.detrendOrder.description}, ...
    { 'Style', 'edit', 'string', params.detrendOrder.value, ...
      'horizontalalignment', 'left',  'tag',  'detrendOrder', ...
      'TooltipString', params.detrendOrder.description}, ...                               % threshold and detrendOrder
    { 'Style', 'text', 'string', 'qrsDurationMs', ...
      'horizontalalignment', 'right', ...
      'TooltipString',params.qrsDurationMs.description}, ...
    { 'Style', 'edit', 'string', params.qrsDurationMs.value, ...
      'horizontalalignment', 'left',  'tag',  'qrsDurationMs', ...
      'TooltipString', params.qrsDurationMs.description}, ...
    { 'Style', 'text', 'string', 'removeOutOfRangeRRs', ... %
      'horizontalalignment', 'right', ...
      'TooltipString', params.removeOutOfRangeRRs.description},...
    { 'Style', 'checkbox', 'Value', params.removeOutOfRangeRRs.value, ...
      'horizontalalignment', 'left', 'tag',  'removeOutOfRangeRRs', ...
      'TooltipString', params.removeOutOfRangeRRs.description}, ...                         % qrsDurationMs and removeOutOfRangeRRs
    { 'Style', 'text', 'string', 'flipIntervalSeconds', ...
      'horizontalalignment', 'right', ...
      'TooltipString',params.flipIntervalSeconds.description}, ...
    { 'Style', 'edit', 'string', params.flipIntervalSeconds.value, ...
      'horizontalalignment', 'left',  'tag',  'flipIntervalSeconds', ...
      'TooltipString', params.flipIntervalSeconds.description}, ...
    { 'Style', 'text', 'string', 'spectrumType', ...
      'horizontalalignment', 'right', ...
      'TooltipString', params.spectrumType.description}, ... 
    { 'Style', 'popupmenu', 'string', 'lomb|ar|fft', ...
      'value', spectrumTypeValue, 'horizontalalignment', 'left',  ...
      'tag', 'spectrumType', ...
       'TooltipString', params.spectrumType.description}, ...                               % flipIntervalSeconds and spectrumType
    { 'Style', 'text', 'string', 'flipDirection', ...
      'horizontalalignment', 'right', ...
      'TooltipString', params.flipDirection.description},... 
    { 'Style', 'popupmenu', 'string', '-1|0|1', ...
      'Value', flipValue, 'horizontalalignment', 'left',...
      'tag', 'flipDirection', ...
      'TooltipString', params.flipDirection.description},...  
    { 'Style', 'text', 'string', 'arMaxModelOrder', ...
      'horizontalalignment', 'right', ...
      'TooltipString',params.arMaxModelOrder.description}, ...
    { 'Style', 'edit', 'string', params.arMaxModelOrder.value, ...
      'horizontalalignment', 'left',  'tag',  'arMaxModelOrder', ...
      'TooltipString', params.arMaxModelOrder.description}, ...                             % flipDirection** and arMaxModelOrder
    { 'Style', 'text', 'string', 'consensusIntervals', ...
      'horizontalalignment', 'right', ...
      'TooltipString',params.consensusIntervals.description}, ...
    { 'Style', 'edit', 'string', params.consensusIntervals.value, ...
      'horizontalalignment', 'left',  'tag',  'consensusIntervals', ...
      'TooltipString', params.consensusIntervals.description}, ...
    { 'Style', 'text', 'string', 'resampleHz', ...
      'horizontalalignment', 'right', ...
      'TooltipString',params.resampleHz.description}, ...
    { 'Style', 'edit', 'string', params.resampleHz.value, ...
      'horizontalalignment', 'left',  'tag',  'resampleHz', ...
      'TooltipString', params.resampleHz.description}, ...                                  % consensusIntervals and resampleHz
    { 'Style', 'text', 'string', 'maxPeakAmpRatio', ...
      'horizontalalignment', 'right', ...
      'TooltipString',params.maxPeakAmpRatio.description}, ...
    { 'Style', 'edit', 'string', params.maxPeakAmpRatio.value, ...
      'horizontalalignment', 'left',  'tag',  'maxPeakAmpRatio', ...
      'TooltipString', params.maxPeakAmpRatio.description}, ...
    { 'Style', 'text', 'string', 'freqCutoff', ...
      'horizontalalignment', 'right', ...
      'TooltipString',params.freqCutoff.description}, ...
    { 'Style', 'edit', 'string', params.freqCutoff.value, ...
      'horizontalalignment', 'left',  'tag',  'freqCutoff', ...
      'TooltipString', params.freqCutoff.description},...                                   % maxPeakAmpRatio and freqCutoff
    { 'Style', 'text', 'string', 'minPeakAmpRatio', ...
      'horizontalalignment', 'right', ...
      'TooltipString',params.minPeakAmpRatio.description}, ...
    { 'Style', 'edit', 'string', params.minPeakAmpRatio.value, ...
      'horizontalalignment', 'left',  'tag',  'minPeakAmpRatio', ...
      'TooltipString', params.minPeakAmpRatio.description}, ...
    { 'Style', 'text', 'string', 'VLFRange', ...
      'horizontalalignment', 'right', ...
      'TooltipString',params.VLFRange.description}, ...
    { 'Style', 'edit', 'string', vector2str(params.VLFRange.value), ...
      'horizontalalignment', 'left',  'tag',  'VLFRange', ...
      'TooltipString', params.VLFRange.description}, ...                                   % minPeakAmpRatio and VLFRange:
    { 'Style', 'text', 'string', 'maxWhisker', ...
      'horizontalalignment', 'right', ...
      'TooltipString',params.maxWhisker.description}, ...
    { 'Style', 'edit', 'string', params.maxWhisker.value, ...
      'horizontalalignment', 'left',  'tag',  'maxWhisker', ...
      'TooltipString', params.maxWhisker.description}, ...
    { 'Style', 'text', 'string', 'LFRange', ...
      'horizontalalignment', 'right', ...
      'TooltipString',params.LFRange.description}, ...
    { 'Style', 'edit', 'string', vector2str(params.LFRange.value), ...
      'horizontalalignment', 'left',  'tag',  'LFRange', ...
      'TooltipString', params.LFRange.description}, ...                                    % minPeakAmpRatio and LFRange
    { 'Style', 'text', 'string', 'verbose', ... 
      'horizontalalignment', 'right', ...
      'TooltipString', params.verbose.description},...
    { 'Style', 'checkbox', 'Value', params.verbose.value, ...
      'horizontalalignment', 'left', 'tag',  'verbose', ...
      'TooltipString', params.verbose.description}, ... 
    { 'Style', 'text', 'string', 'HFRange', ...
      'horizontalalignment', 'right', ...
      'TooltipString',params.HFRange.description}, ...
    { 'Style', 'edit', 'string', vector2str(params.HFRange.value), ...
      'horizontalalignment', 'left',  'tag',  'HFRange', ...
      'TooltipString', params.HFRange.description}, ...                                     % verbose and HFrange
    { 'Style', 'text', 'string', '', 'horizontalalignment', 'right'}, ...                   % Empty line
    { 'Style', 'text', 'string', 'Plotting options:', 'fontweight', 'bold'...
      'horizontalalignment', 'right'}, ...                                                  % titles
    { 'Style', 'text', 'string', 'doPlot', ... 
      'horizontalalignment', 'right', ...
      'TooltipString', params.doPlot.description},...
    { 'Style', 'checkbox', 'Value', params.doPlot.value, ...
      'horizontalalignment', 'left', 'tag',  'doPlot', ...
      'TooltipString', params.doPlot.description}, ... 
    { 'Style', 'text', 'string', 'figureClip', ... 
      'horizontalalignment', 'right', ...
      'TooltipString', params.figureClip.description},...
    { 'Style', 'edit', 'string', params.figureClip.value, ...
      'horizontalalignment', 'left', 'tag',  'figureClip', ...
      'TooltipString', params.figureClip.description}, ...                                  % doplot and figureClip          
    { 'Style', 'text', 'string', 'figureClose', ... 
      'horizontalalignment', 'right', ...
      'TooltipString', params.figureClose.description},...
    { 'Style', 'checkbox', 'Value', params.figureClose.value, ...
      'horizontalalignment', 'left', 'tag',  'figureClose', ...
      'TooltipString', params.figureClose.description},...   
    { 'Style', 'text', 'string', 'figureVisibility', ...
      'horizontalalignment', 'right', ...
      'TooltipString', params.figureVisibility.description},... 
    { 'Style', 'popupmenu', 'string', 'on|off', ...
      'Value', figureVisValue, 'horizontalalignment', 'left',...
      'tag', 'figureVisibility', ...
      'TooltipString', params.figureVisibility.description}};                              % figureClose and figureVisibility   
%% Call the GUI
[~, ~, ~, outStruct] = inputgui('geometry', geometry, 'geomvert', geomvert, ...
        'uilist', uilist, 'title', theTitle,'helpcom', 'pophelp(''pop_eegbeats'')');
if isempty(outStruct) % Cancel was hit
    okay = false;
    return;
end
%% Massage the GUI return values to fit BLINKER's expectations
%check boxes/drop down
outStruct.figureVisibility = figureVisMenu{outStruct.figureVisibility};
outStruct.spectrumType = spectrumTypeMenu{outStruct.spectrumType};
outStruct.flipDirection = str2num(flipMenu{outStruct.flipDirection});
outStruct.doRRMeasures = logical(outStruct.doRRMeasures);
outStruct.removeOutOfRangeRRs = logical(outStruct.removeOutOfRangeRRs);
outStruct.verbose = logical(outStruct.verbose);
outStruct.doPlot = logical(outStruct.doPlot);
outStruct.figureClip = str2double(outStruct.figureClip);
outStruct.figureClose = logical(outStruct.figureClose);

%convert str to num or double for reg edit box
outStruct.srate = str2double(outStruct.srate);
outStruct.truncateThreshold = str2double(outStruct.truncateThreshold);
outStruct.rrMaxMs = str2double(outStruct.rrMaxMs);
outStruct.rrMinMs = str2double(outStruct.rrMinMs);
outStruct.threshold = str2double(outStruct.threshold);
outStruct.qrsDurationMs = str2double(outStruct.qrsDurationMs);
outStruct.flipIntervalSeconds = str2double(outStruct.flipIntervalSeconds);
outStruct.consensusIntervals = str2double(outStruct.consensusIntervals);
outStruct.maxPeakAmpRatio = str2double(outStruct.maxPeakAmpRatio);
outStruct.minPeakAmpRatio = str2double(outStruct.minPeakAmpRatio);
outStruct.maxWhisker = str2double(outStruct.maxWhisker);
outStruct.rrsAroundOutlierAmpPeaks = str2double(outStruct.rrsAroundOutlierAmpPeaks);
outStruct.rrOutlierNeighborhood = str2double(outStruct.rrOutlierNeighborhood);
outStruct.rrPercentToBeOutlier = str2double(outStruct.rrPercentToBeOutlier);
outStruct.rrBlockMinutes = str2double(outStruct.rrBlockMinutes);
outStruct.rrBlockStepMinutes = str2double(outStruct.rrBlockStepMinutes);
outStruct.detrendOrder = str2double(outStruct.detrendOrder);
outStruct.arMaxModelOrder = str2double(outStruct.arMaxModelOrder);
outStruct.resampleHz = str2double(outStruct.resampleHz);
outStruct.freqCutoff = str2double(outStruct.freqCutoff);

% ranges
if ~isempty(outStruct.filterHz)
    outStruct.filterHz = sort(str2num(outStruct.filterHz)); 
else
    outStruct.filterHz = NaN;
end
if ~isempty(outStruct.VLFRange)
    outStruct.VLFRange = sort(str2num(outStruct.VLFRange)); 
else
    outStruct.VLFRange = NaN;
end
if ~isempty(outStruct.LFRange)
    outStruct.LFRange = sort(str2num(outStruct.LFRange)); 
else
    outStruct.LFRange = NaN;
end
if ~isempty(outStruct.HFRange)
    outStruct.HFRange = sort(str2num(outStruct.HFRange)); 
else
    outStruct.HFRange = NaN;
end


function closeOpenWindows(windowName)
    openWindow = findobj('Type', 'Figure', '-and', 'Name', windowName);
    if ~(isempty(openWindow))
        close(openWindow);
    end
end


end